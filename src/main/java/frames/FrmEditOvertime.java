/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frames;

import classes.CSVFileManager;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author EMAN
 */
public class FrmEditOvertime extends javax.swing.JFrame {

    private FrmHRpage hrPageRef;
    /**
     * Creates new form FrmEditOvertime
     */
    public FrmEditOvertime(FrmHRpage hrPageRef) {
        initComponents();
        this.hrPageRef = hrPageRef;
        showDate();
    }

    //event handler method for close button
    private void FrameClose(java.awt.event.MouseEvent evt) {                            
        this.dispose();
    }    

    //for showing of date
    public void showDate(){
        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat ("MM/dd/yyyy");
        String date = s.format(d);
        lblDate.setText(date);
    }
    
    //method for populating textfields and jDCchooser
    public void populateFields(String[] overtimeInfo) {
        txtEmployeeID.setText(overtimeInfo[0]);
        txtTimeIn.setText(overtimeInfo[3]);
        txtTimeOut.setText(overtimeInfo[4]);
        txtTotalWorkedHours.setText(overtimeInfo[5]);
        txtApprover.setText(hrPageRef.getLblFName().getText());
        txtDateResponded.setText(getLblDate().getText());

        // Parse and set the date fields if the date strings are not empty
        SimpleDateFormat dateFormat = new SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy");
        try {
            if (!overtimeInfo[1].isEmpty()) {
                Date date = dateFormat.parse(overtimeInfo[1]); // Parse the date string
                txtReqDate.setText(new SimpleDateFormat("MM/dd/yyyy").format(date)); // Set the date in the text field
            }
            if (!overtimeInfo[2].isEmpty()) {
                Date date1 = dateFormat.parse(overtimeInfo[2]);
                txtOtDate.setText(new SimpleDateFormat("MM/dd/yyyy").format(date1)); // Set the date in the text field
            }
          
          
        } catch (ParseException ex) {
            ex.printStackTrace(); // Handle parsing exception
        }
       
    }
    
    //method for clearing textfields
    private void clearTextFields() {
        txtEmployeeID.setText("");
        txtReqDate.setText("");
        txtOtDate.setText("");
        txtTimeIn.setText("");
        txtTimeOut.setText("");
        txtTotalWorkedHours.setText("");
        jCBStatus.setSelectedItem(null);
        txtApprover.setText("");
        txtDateResponded.setText("");
    }

    
    //getter
    public JLabel getLblDate() {
        return lblDate;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblEmployeeID = new javax.swing.JLabel();
        txtEmployeeID = new javax.swing.JTextField();
        lblEmployeeID1 = new javax.swing.JLabel();
        txtReqDate = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        txtOtDate = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        txtTimeIn = new javax.swing.JTextField();
        lblBirthday = new javax.swing.JLabel();
        txtTimeOut = new javax.swing.JTextField();
        lblAddress1 = new javax.swing.JLabel();
        txtTotalWorkedHours = new javax.swing.JTextField();
        lblSSS = new javax.swing.JLabel();
        lblPhilhealth = new javax.swing.JLabel();
        txtApprover = new javax.swing.JTextField();
        lblTIN = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblDateToday = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        txtDateResponded = new javax.swing.JTextField();
        jCBStatus = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(218, 224, 234));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(78, 99, 140));
        jLabel1.setText("Respond to Overtime Request");

        lblEmployeeID.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblEmployeeID.setForeground(new java.awt.Color(78, 99, 140));
        lblEmployeeID.setText("Employee ID:");

        txtEmployeeID.setEditable(false);
        txtEmployeeID.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        lblEmployeeID1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblEmployeeID1.setForeground(new java.awt.Color(78, 99, 140));
        lblEmployeeID1.setText("Date of Request:");

        txtReqDate.setEditable(false);
        txtReqDate.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        lblLastName.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(78, 99, 140));
        lblLastName.setText("Date of OT:");

        txtOtDate.setEditable(false);
        txtOtDate.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        lblFirstName.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(78, 99, 140));
        lblFirstName.setText("Time In:");

        txtTimeIn.setEditable(false);
        txtTimeIn.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        lblBirthday.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblBirthday.setForeground(new java.awt.Color(78, 99, 140));
        lblBirthday.setText("Time Out:");

        txtTimeOut.setEditable(false);
        txtTimeOut.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        lblAddress1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblAddress1.setForeground(new java.awt.Color(78, 99, 140));
        lblAddress1.setText("Total Worked Hours:");

        txtTotalWorkedHours.setEditable(false);
        txtTotalWorkedHours.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        lblSSS.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblSSS.setForeground(new java.awt.Color(78, 99, 140));
        lblSSS.setText("Status:");

        lblPhilhealth.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblPhilhealth.setForeground(new java.awt.Color(78, 99, 140));
        lblPhilhealth.setText("Approver:");

        txtApprover.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        lblTIN.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblTIN.setForeground(new java.awt.Color(78, 99, 140));
        lblTIN.setText("Date Responded:");

        btnSubmit.setBackground(new java.awt.Color(78, 99, 140));
        btnSubmit.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(78, 99, 140));
        btnCancel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblDateToday.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblDateToday.setForeground(new java.awt.Color(78, 99, 140));
        lblDateToday.setText("Date Today:");

        lblDate.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblDate.setForeground(new java.awt.Color(78, 99, 140));
        lblDate.setText("02/21/2024");

        txtDateResponded.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jCBStatus.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jCBStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Approved", "Rejected" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSubmit)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblSSS)
                                .addComponent(lblPhilhealth)
                                .addComponent(lblTIN))
                            .addGap(88, 88, 88)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtApprover)
                                .addComponent(txtDateResponded, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jCBStatus, 0, 195, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblFirstName)
                                .addComponent(lblBirthday)
                                .addComponent(lblLastName)
                                .addComponent(lblAddress1)
                                .addComponent(lblEmployeeID)
                                .addComponent(lblEmployeeID1))
                            .addGap(59, 59, 59)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtOtDate, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                .addComponent(txtTotalWorkedHours)
                                .addComponent(txtEmployeeID)
                                .addComponent(txtTimeIn)
                                .addComponent(txtTimeOut)
                                .addComponent(txtReqDate)))
                        .addComponent(jLabel1)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(65, 65, 65)
                            .addComponent(lblDateToday)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lblDate))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDate)
                    .addComponent(lblDateToday))
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmployeeID)
                    .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmployeeID1)
                    .addComponent(txtReqDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName)
                    .addComponent(txtOtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtTimeIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBirthday)
                    .addComponent(txtTimeOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress1)
                    .addComponent(txtTotalWorkedHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSSS)
                    .addComponent(jCBStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhilhealth)
                    .addComponent(txtApprover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTIN)
                    .addComponent(txtDateResponded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnCancel))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        // Get the selected row index
        int selectedRowIndex = hrPageRef.getTblOvertimeReq().getSelectedRow();
        if (selectedRowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a leave request to respond.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Prepare leaveInfo array with updated leave information
        String[] overtimeInfo = {
            txtEmployeeID.getText(),                        // Employee ID
            txtReqDate.getText(),                           // Request Date
            txtOtDate.getText(),                            // Date of Overtime
            txtTimeIn.getText(),                            // Time in
            txtTimeOut.getText(),                           // Time out
            txtTotalWorkedHours.getText(),                  // Total Worked Hours
            jCBStatus.getSelectedItem().toString(),         // Status
            txtApprover.getText(),                          // Approver from lblFName in FrmHRpage
            txtDateResponded.getText(),                     // Date from lblDate in FrmEditOvertime
        };


        // Update table in FrmHRpage with the edited leave record
        hrPageRef.updateOvertimeTableRow(selectedRowIndex, overtimeInfo);

        // Update CSV file with data from the table in FrmHRpage
        String csvFilePath = "src\\main\\java\\files\\OvertimeRequest.csv";
        JTable table = hrPageRef.getTblOvertimeReq(); // Assuming getTable() returns the JTable instance in FrmHRpage
        CSVFileManager.updateCSVFile(csvFilePath, table);

        // Show success message
        JOptionPane.showMessageDialog(this, "Selected Overtime Request responded successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

        // Clear text fields after saving
        clearTextFields();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
         this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmEditOvertime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmEditOvertime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmEditOvertime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEditOvertime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new FrmEditOvertime().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> jCBStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAddress1;
    private javax.swing.JLabel lblBirthday;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDateToday;
    private javax.swing.JLabel lblEmployeeID;
    private javax.swing.JLabel lblEmployeeID1;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblPhilhealth;
    private javax.swing.JLabel lblSSS;
    private javax.swing.JLabel lblTIN;
    private javax.swing.JTextField txtApprover;
    private javax.swing.JTextField txtDateResponded;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTextField txtOtDate;
    private javax.swing.JTextField txtReqDate;
    private javax.swing.JTextField txtTimeIn;
    private javax.swing.JTextField txtTimeOut;
    private javax.swing.JTextField txtTotalWorkedHours;
    // End of variables declaration//GEN-END:variables
}

package frames;
import classes.Employee;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.DecimalFormat;
import java.text.ParseException;
import javax.swing.JLabel;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author yen
 */
public class FrmAttendance extends javax.swing.JFrame {

    private Employee[] employee1;
    DefaultTableModel model;
    /**
     * Creates new form Employee_Information
     */
    public FrmAttendance() {
        initComponents();
        setResizable(false);
        employee1 = Employee.readEmployee("C:\\Users\\DREAM PC\\Documents\\NetBeansProjects\\PayrollSystemMaven\\src\\main\\java\\files\\Employee.csv");
    
        
        showDate();
        showTime();
    }

    //getter

    public JLabel getLblAttEid() {
        return lblAttEid;
    }

    public JLabel getLblAttFName() {
        return lblAttFName;
    }
    
     public void showDate(){
        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat ("MM/dd/yyyy");
        String date = s.format(d);
        lblDate.setText(date);
    }
    
    public void showTime(){
        new Timer (0, new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent as) {
                Date d = new Date();
                SimpleDateFormat s = new SimpleDateFormat ("hh:mm:ss");
                String time = s.format(d);
                lblTime.setText(time);
            }
        }).start();
    }
    
    // Method to display the contents of the CSV file in the table for a specific employee
    public void displayTimeTrackerFromCSV(String employeeId) {
         DefaultTableModel model = (DefaultTableModel) timeTracker_table.getModel();
        model.setRowCount(0); // Clear existing rows

        String filePath = "C:\\Users\\DREAM PC\\Documents\\NetBeansProjects\\PayrollSystemMaven\\src\\main\\java\\files\\TimeTracker.csv";
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            // Read and discard the header row
            reader.readLine();
            // Read the data rows
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length > 0 && parts[0].equals(employeeId)) {
                    model.addRow(parts);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            // Handle the exception appropriately
        }

}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        lblTime = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        timeIn_button = new javax.swing.JButton();
        timeOut_button = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        timeTracker_table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        logOut_button = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblLogoMotorPH = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblAttFName = new javax.swing.JLabel();
        lblAttEid = new javax.swing.JLabel();
        lblWelcomeMsg = new javax.swing.JLabel();
        lblIDniEmployee = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        profilePicture_panel = new javax.swing.JPanel();
        profilePicture_icon = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblTotalWorkedHours = new javax.swing.JLabel();
        txtTotalWorkedHours = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        jMCMonth = new com.toedter.calendar.JMonthChooser();
        jYCYear = new com.toedter.calendar.JYearChooser();
        jPanel6 = new javax.swing.JPanel();
        lblTimeTracker = new javax.swing.JLabel();
        salary_button = new javax.swing.JButton();
        request_button = new javax.swing.JButton();
        profile_button = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        lblAttendance = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        attendance_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(218, 226, 227));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(1080, 632));
        getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(218, 226, 227));
        jPanel2.setMinimumSize(new java.awt.Dimension(1020, 680));
        jPanel2.setPreferredSize(new java.awt.Dimension(1080, 680));

        jPanel5.setBackground(new java.awt.Color(140, 172, 177));

        lblTime.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 255, 255));
        lblTime.setText("08:00:00");

        lblDate.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setText("02/21/2024");

        timeIn_button.setBackground(new java.awt.Color(140, 172, 177));
        timeIn_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        timeIn_button.setForeground(new java.awt.Color(255, 255, 255));
        timeIn_button.setText("Time in");
        timeIn_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeIn_buttonActionPerformed(evt);
            }
        });

        timeOut_button.setBackground(new java.awt.Color(140, 172, 177));
        timeOut_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        timeOut_button.setForeground(new java.awt.Color(255, 255, 255));
        timeOut_button.setText("Time out");
        timeOut_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeOut_buttonActionPerformed(evt);
            }
        });

        timeTracker_table.setBackground(new java.awt.Color(108, 133, 136));
        timeTracker_table.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        timeTracker_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Date", "Time In", "Time Out", "Total Worked Hours"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        timeTracker_table.setGridColor(new java.awt.Color(173, 202, 206));
        timeTracker_table.setSelectionBackground(new java.awt.Color(108, 133, 136));
        timeTracker_table.setShowGrid(true);
        jScrollPane2.setViewportView(timeTracker_table);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(timeIn_button, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121)
                        .addComponent(timeOut_button, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(lblTime)
                        .addGap(221, 221, 221))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(lblDate)
                        .addGap(229, 229, 229))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDate)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timeOut_button, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeIn_button, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(53, 66, 68));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        logOut_button.setBackground(new java.awt.Color(53, 66, 68));
        logOut_button.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        logOut_button.setForeground(new java.awt.Color(255, 255, 255));
        logOut_button.setText("Log out");
        logOut_button.setToolTipText("");
        logOut_button.setAutoscrolls(true);
        logOut_button.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        logOut_button.setBorderPainted(false);
        logOut_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOut_buttonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(210, 214, 214));
        jLabel3.setText("|");

        lblLogoMotorPH.setFont(new java.awt.Font("Verdana", 1, 25)); // NOI18N
        lblLogoMotorPH.setForeground(new java.awt.Color(208, 228, 230));
        lblLogoMotorPH.setText("MotorPH");

        lblAttFName.setFont(new java.awt.Font("Verdana", 1, 25)); // NOI18N
        lblAttFName.setForeground(new java.awt.Color(255, 255, 255));
        lblAttFName.setText("firstname");

        lblAttEid.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblAttEid.setForeground(new java.awt.Color(255, 255, 255));
        lblAttEid.setText("###");

        lblWelcomeMsg.setFont(new java.awt.Font("Verdana", 0, 25)); // NOI18N
        lblWelcomeMsg.setForeground(new java.awt.Color(208, 228, 230));
        lblWelcomeMsg.setText("Welcome,");

        lblIDniEmployee.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblIDniEmployee.setForeground(new java.awt.Color(255, 255, 255));
        lblIDniEmployee.setText("Employee ID:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblLogoMotorPH, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                .addComponent(lblWelcomeMsg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAttFName)
                .addGap(132, 132, 132)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIDniEmployee)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblAttEid)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(logOut_button, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logOut_button, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                        .addComponent(lblAttEid)
                        .addComponent(lblIDniEmployee))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblLogoMotorPH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblWelcomeMsg)
                        .addComponent(lblAttFName)))
                .addGap(13, 13, 13))
        );

        jPanel3.setBackground(new java.awt.Color(173, 202, 206));

        profilePicture_panel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\DREAM PC\\Documents\\NetBeansProjects\\PayrollSystemMaven\\src\\main\\java\\icons\\4851855-200 (1).png")); // NOI18N

        javax.swing.GroupLayout profilePicture_panelLayout = new javax.swing.GroupLayout(profilePicture_panel);
        profilePicture_panel.setLayout(profilePicture_panelLayout);
        profilePicture_panelLayout.setHorizontalGroup(
            profilePicture_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePicture_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(profilePicture_icon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        profilePicture_panelLayout.setVerticalGroup(
            profilePicture_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePicture_panelLayout.createSequentialGroup()
                .addGroup(profilePicture_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profilePicture_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        lblTotalWorkedHours.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblTotalWorkedHours.setForeground(new java.awt.Color(255, 255, 255));
        lblTotalWorkedHours.setText("Total Worked Hours:");

        txtTotalWorkedHours.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        btnView.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jMCMonth.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMCMonth.setYearChooser(jYCYear);

        jYCYear.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jYCYear.setStartYear(2022);
        jYCYear.setValue(2022);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTotalWorkedHours)
                    .addComponent(lblTotalWorkedHours, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jMCMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(profilePicture_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jYCYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(42, Short.MAX_VALUE)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jMCMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jYCYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(lblTotalWorkedHours, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotalWorkedHours, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(profilePicture_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        jPanel6.setBackground(new java.awt.Color(108, 133, 136));

        lblTimeTracker.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblTimeTracker.setForeground(new java.awt.Color(255, 255, 255));
        lblTimeTracker.setText("Time Tracker");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(lblTimeTracker)
                .addContainerGap(227, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTimeTracker, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addContainerGap())
        );

        salary_button.setBackground(new java.awt.Color(53, 66, 68));
        salary_button.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        salary_button.setForeground(new java.awt.Color(255, 255, 255));
        salary_button.setText("Salary");
        salary_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salary_buttonActionPerformed(evt);
            }
        });

        request_button.setBackground(new java.awt.Color(53, 66, 68));
        request_button.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        request_button.setForeground(new java.awt.Color(255, 255, 255));
        request_button.setText("Request");
        request_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                request_buttonActionPerformed(evt);
            }
        });

        profile_button.setBackground(new java.awt.Color(53, 66, 68));
        profile_button.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        profile_button.setForeground(new java.awt.Color(255, 255, 255));
        profile_button.setText("Profile");
        profile_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profile_buttonActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(140, 172, 177));

        lblAttendance.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblAttendance.setForeground(new java.awt.Color(255, 255, 255));
        lblAttendance.setText("Attendance");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(179, Short.MAX_VALUE)
                .addComponent(lblAttendance)
                .addGap(169, 169, 169))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAttendance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel9.setBackground(new java.awt.Color(173, 202, 206));

        attendance_table.setBackground(new java.awt.Color(108, 133, 136));
        attendance_table.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        attendance_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time In", "Time Out"
            }
        ));
        attendance_table.setGridColor(new java.awt.Color(173, 202, 206));
        attendance_table.setSelectionBackground(new java.awt.Color(108, 133, 136));
        attendance_table.setShowGrid(true);
        jScrollPane1.setViewportView(attendance_table);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(440, 440, 440)
                                .addComponent(salary_button, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(request_button, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(204, 204, 204))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(219, 219, 219)
                                        .addComponent(profile_button, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(salary_button, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(profile_button, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(request_button, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 1110, 620);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void request_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_request_buttonActionPerformed
        // TODO add your handling code here:
        FrmRequest request = new FrmRequest();
            FrmEmployee_Information _profile = new FrmEmployee_Information();
        request.getLblReqEid().setText(lblAttEid.getText());
        request.getLblReqFName().setText(lblAttFName.getText());    
        request.show();
        request.setLocationRelativeTo(null); // Center the frame
        
        String employeeId = lblAttEid.getText();
        request.displayDataForEmployee(employeeId); // Pass the employee ID
            
            dispose();
    }//GEN-LAST:event_request_buttonActionPerformed

    private void profile_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profile_buttonActionPerformed
        // TODO add your handling code here:
        FrmEmployee_Information _profile = new FrmEmployee_Information();
        _profile.setVisible(true);
        _profile.setLocationRelativeTo(null); // Center the frame
          
            
            for (Employee infoemp: employee1){
                if (infoemp.GetEmployeeID() == Integer.parseInt(lblAttEid.getText())) {
                    _profile.setVisible(true);
                    _profile.getLblEmpStatus().setText(infoemp.GetStatus());
                    _profile.getTxtEmployeeID().setText(String.valueOf(infoemp.GetEmployeeID()));
                    _profile.getTxtFirstName().setText(infoemp.GetFirstName());
                    _profile.getTxtLastName().setText(infoemp.GetLastName());
                    _profile.getTxtRole().setText(infoemp.GetRole());
                    _profile.getTxtDepartment().setText(infoemp.GetDepartment());
                    _profile.getTxtSupervisor().setText(infoemp.GetSupervisor());
                    _profile.getTxtSSS_number().setText(infoemp.GetSSSNumber());
                    _profile.getTxtPagibig_number().setText(infoemp.GetPagibigNumber());
                    _profile.getTxtPhilhealth_number().setText(infoemp.GetPhilhealthNumber());
                    _profile.getTxtTin_number().setText(infoemp.GetTinNumber());
                    _profile.getLblEid().setText(String.valueOf(infoemp.GetEmployeeID()));
                    _profile.getLblFName().setText(infoemp.GetFirstName());
                            
                    System.out.println("sss" + infoemp.GetSSSNumber()+ infoemp.GetBirthday() + infoemp.GetDepartment() + infoemp.GetFirstName() +infoemp.GetLastName() +infoemp.GetPhilhealthNumber() +
                    infoemp.GetRole() + infoemp.GetStatus() +infoemp.GetSupervisor() + infoemp.GetTinNumber());
                    
                    
                    
                    
                    break;
                }
                else{
                    
                }
            }
            
            dispose();
    }//GEN-LAST:event_profile_buttonActionPerformed

    private void logOut_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOut_buttonActionPerformed
        // TODO add your handling code here:
        FrmLogin logOut = new FrmLogin();
            logOut.show();
            logOut.setLocationRelativeTo(null); // Center the frame
            
            dispose();
    }//GEN-LAST:event_logOut_buttonActionPerformed

    private void timeIn_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeIn_buttonActionPerformed
        // TODO add your handling code here:
         // Get the current date and time
        String currentDate = lblDate.getText();
        String currentTime = lblTime.getText();

        // Get the employee ID
        String employeeId = lblAttEid.getText();

        // Check if the user has already timed in for the current date
        DefaultTableModel model = (DefaultTableModel) timeTracker_table.getModel();
        boolean alreadyTimedIn = false;
        for (int i = 0; i < model.getRowCount(); i++) {
            String dateInTable = (String) model.getValueAt(i, 1); // Assuming date is stored in the second column (index 1)
            if (dateInTable.equals(currentDate)) {
                alreadyTimedIn = true;
                break;
            }
        }

        // If the user has already timed in for the current date, display a message and return
        if (alreadyTimedIn) {
            JOptionPane.showMessageDialog(this, "You have already timed in for today.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Add the data to the table model
        model.addRow(new Object[]{employeeId, currentDate, currentTime, null}); // Assuming the last column is for the time-out

        // Save the data to a CSV file
        String filePath = "C:\\Users\\DREAM PC\\Documents\\NetBeansProjects\\PayrollSystemMaven\\src\\main\\java\\files\\TimeTracker.csv";
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath, true))) {
            // Write the data to the CSV file on the same line
            writer.write(employeeId + "," + currentDate + "," + currentTime + ",");
            writer.write(","); // Reserve space for time out
            writer.newLine(); // Move to the next line
        } catch (IOException e) {
            e.printStackTrace();
            // Handle the exception appropriately
        }
    }//GEN-LAST:event_timeIn_buttonActionPerformed

    private void timeOut_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeOut_buttonActionPerformed
        // TODO add your handling code here:
        // Ensure model is properly initialized
        DefaultTableModel model = (DefaultTableModel) timeTracker_table.getModel();

        // Get the current time
        String currentTime = lblTime.getText();
        String currentDate = lblDate.getText(); // Current date

        // Find the last inserted row index with a Time In but without a Time Out
        int lastInsertedRowIndex = -1;
        for (int i = 0; i < model.getRowCount(); i++) {
            // Check if there is a time in without a corresponding time out
            if (model.getValueAt(i, 2) != null && model.getValueAt(i, 3) == null) {
                lastInsertedRowIndex = i;
                break;
            }
        }

        if (lastInsertedRowIndex != -1) {
            // Check if the user has already timed out for the current day
            boolean alreadyTimedOut = false;
            for (int i = 0; i < model.getRowCount(); i++) {
                // Check if there is a time in and time out for the current day
                if (model.getValueAt(i, 1).equals(currentDate) && model.getValueAt(i, 2) != null && model.getValueAt(i, 3) != null) {
                    alreadyTimedOut = true;
                    break;
                }
            }

            if (!alreadyTimedOut) {
                // Update the existing row with Time Out
                model.setValueAt(currentTime, lastInsertedRowIndex, 3);

                // Calculate total worked hours without subtracting break time
                String timeInString = (String) model.getValueAt(lastInsertedRowIndex, 2);

                SimpleDateFormat format = new SimpleDateFormat("HH:mm");
                try {
                    Date timeIn = format.parse(timeInString);
                    Date timeOut = format.parse(currentTime);

                    // Check if time out is on the same day as time in
                    if (!isSameDay(timeIn, timeOut)) {
                        JOptionPane.showMessageDialog(this, "You cannot time out for a previous day.", "Error", JOptionPane.ERROR_MESSAGE);
                        return; // Exit the method
                    }

                    long difference = timeOut.getTime() - timeIn.getTime();

                    // Convert milliseconds to hours and minutes
                    long totalWorkedHoursMillis = difference / (1000 * 60 * 60);
                    long totalWorkedMinutes = (difference / (1000 * 60)) % 60;

                    // Convert to double
                    double totalWorkedHours = totalWorkedHoursMillis + (totalWorkedMinutes / 60.0);

                    // Update the total worked hours column
                    model.setValueAt(totalWorkedHours, lastInsertedRowIndex, 4);

                    // Save the updated row to the CSV file
                    String filePath = "C:\\Users\\DREAM PC\\Documents\\NetBeansProjects\\PayrollSystemMaven\\src\\main\\java\\files\\TimeTracker.csv";
                    try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath, true))) {
                        String employeeId = (String) model.getValueAt(lastInsertedRowIndex, 0);
                        String date = (String) model.getValueAt(lastInsertedRowIndex, 1);
                        String timeInValue = (String) model.getValueAt(lastInsertedRowIndex, 2);
                        String timeOutValue = (String) model.getValueAt(lastInsertedRowIndex, 3);

                        // Write the updated row to the CSV file
                        writer.write(employeeId + "," + date + "," + timeInValue + "," + timeOutValue + "," + totalWorkedHours);
                        writer.newLine();
                    } catch (IOException e) {
                        e.printStackTrace();
                        // Handle the exception appropriately
                    }
                } catch (ParseException e) {
                    e.printStackTrace();
                    // Handle the exception appropriately
                }
            } else {
                JOptionPane.showMessageDialog(this, "You have already timed out for today.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Inform the user that Time In has not been performed
            JOptionPane.showMessageDialog(this, "Please perform Time In first.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }   

    // Method to check if two dates are the same day
    private boolean isSameDay(Date date1, Date date2) {
        Calendar cal1 = Calendar.getInstance();
        cal1.setTime(date1);
        Calendar cal2 = Calendar.getInstance();
        cal2.setTime(date2);
        return cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                cal1.get(Calendar.MONTH) == cal2.get(Calendar.MONTH) &&
                cal1.get(Calendar.DAY_OF_MONTH) == cal2.get(Calendar.DAY_OF_MONTH);

    }//GEN-LAST:event_timeOut_buttonActionPerformed

    private void salary_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salary_buttonActionPerformed
        // TODO add your handling code here:
        FrmSalary salary = new FrmSalary();
        FrmEmployee_Information _profile = new FrmEmployee_Information();
        salary.getLblSalEid().setText(lblAttEid.getText());
        salary.getLblSalFName().setText(lblAttFName.getText());
        salary.show();
        salary.setLocationRelativeTo(null); // Center the frame
            
            dispose();
    }//GEN-LAST:event_salary_buttonActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:                                      
        // Get the selected month and year from the JMonthChooser and JYearChooser
        int selectedMonth = jMCMonth.getMonth() + 1; // Month is zero-based, so add 1
        int selectedYear = jYCYear.getYear();

        // Prepare the table model
        DefaultTableModel model = (DefaultTableModel) attendance_table.getModel();
        model.setRowCount(0); // Clear existing rows

        // File path
        String filePath = "C:\\Users\\DREAM PC\\Documents\\NetBeansProjects\\PayrollSystemMaven\\src\\main\\java\\files\\OldAttendance.csv";

        // Flag to check if data is found for the selected month and year
        boolean dataFound = false;

        // Total worked hours
        double totalHours = 0.0;

        // Read data from CSV file
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            // Read the header line and skip it
            String header = reader.readLine();

            String line;
            while ((line = reader.readLine()) != null) {
                // Split the CSV line
                String[] parts = line.split(",");

                // Check if the line matches the selected month, year, and employee ID
                SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
                Date date = dateFormat.parse(parts[3]); // Assuming date is in column index 3
                int lineMonth = date.getMonth() + 1; // Month is zero-based, so add 1
                int lineYear = date.getYear() + 1900; // Year is offset by 1900
                if (lineMonth == selectedMonth && lineYear == selectedYear && parts[0].equals(lblAttEid.getText())) {
                    // Add the relevant columns to the table model
                    Object[] rowData = {parts[3], parts[4], parts[5]}; // columns 3, 4, and 5 are date, time in, and time out that we want to show in the table
                    model.addRow(rowData);
                    dataFound = true;

                    // Accumulate total worked hours from column index 6
                    totalHours += Double.parseDouble(parts[6]); // Assuming column index 6 contains total hours worked
                }
            }
        } catch (IOException | ParseException e) {
            e.printStackTrace();
            // Handle the exception appropriately
        }

        // Show message if no data is found
        if (!dataFound) {
            JOptionPane.showMessageDialog(this, "No data available for the selected month, year, and employee ID.", "Data Not Found", JOptionPane.INFORMATION_MESSAGE);
            
            // Clear or disable the text fields related to salary details
                txtTotalWorkedHours.setText("");
                
            // Return from the method as no further processing is required
                return;
        }

        // Update the txtTotalWorkedHours text field with the total hours
        txtTotalWorkedHours.setText(String.format("%.2f", totalHours)); 
        
    }//GEN-LAST:event_btnViewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAttendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable attendance_table;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private com.toedter.calendar.JMonthChooser jMCMonth;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JYearChooser jYCYear;
    private javax.swing.JLabel lblAttEid;
    private javax.swing.JLabel lblAttFName;
    private javax.swing.JLabel lblAttendance;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblIDniEmployee;
    private javax.swing.JLabel lblLogoMotorPH;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTimeTracker;
    private javax.swing.JLabel lblTotalWorkedHours;
    private javax.swing.JLabel lblWelcomeMsg;
    private javax.swing.JButton logOut_button;
    private javax.swing.JLabel profilePicture_icon;
    private javax.swing.JPanel profilePicture_panel;
    private javax.swing.JButton profile_button;
    private javax.swing.JButton request_button;
    private javax.swing.JButton salary_button;
    private javax.swing.JButton timeIn_button;
    private javax.swing.JButton timeOut_button;
    private javax.swing.JTable timeTracker_table;
    public javax.swing.JTextField txtTotalWorkedHours;
    // End of variables declaration//GEN-END:variables
}

